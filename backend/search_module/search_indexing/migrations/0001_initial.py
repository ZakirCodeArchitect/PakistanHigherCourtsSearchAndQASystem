# Generated by Django
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='IndexingConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chunk_size', models.IntegerField(default=500, help_text='Number of tokens per chunk')),
                ('chunk_overlap', models.IntegerField(default=50, help_text='Overlap between chunks')),
                ('embedding_model', models.CharField(default='all-MiniLM-L6-v2', max_length=100)),
                ('embedding_dimension', models.IntegerField(default=384)),
                ('batch_size', models.IntegerField(default=32)),
                ('max_text_length', models.IntegerField(default=8192)),
                ('version', models.CharField(default='1.0', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'indexing_configs',
            },
        ),
        migrations.CreateModel(
            name='VectorIndex',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index_name', models.CharField(max_length=100, unique=True)),
                ('index_type', models.CharField(default='faiss', max_length=50)),
                ('embedding_model', models.CharField(max_length=100)),
                ('embedding_dimension', models.IntegerField()),
                ('index_config', models.JSONField(default=dict)),
                ('index_file_path', models.CharField(max_length=500)),
                ('index_file_size', models.BigIntegerField(default=0)),
                ('total_vectors', models.IntegerField(default=0)),
                ('total_chunks', models.IntegerField(default=0)),
                ('is_built', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('version', models.CharField(default='1.0', max_length=20)),
                ('model_version', models.CharField(default='1.0', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'vector_indexes',
            },
        ),
        migrations.CreateModel(
            name='KeywordIndex',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index_name', models.CharField(max_length=100, unique=True)),
                ('index_type', models.CharField(default='postgresql', max_length=50)),
                ('analyzer_config', models.JSONField(default=dict)),
                ('weight_config', models.JSONField(default=dict)),
                ('total_documents', models.IntegerField(default=0)),
                ('total_terms', models.IntegerField(default=0)),
                ('is_built', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('version', models.CharField(default='1.0', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'keyword_indexes',
            },
        ),
        migrations.CreateModel(
            name='FacetIndex',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index_name', models.CharField(max_length=100, unique=True)),
                ('facet_type', models.CharField(max_length=50)),
                ('term_mappings', models.JSONField(default=dict)),
                ('boost_config', models.JSONField(default=dict)),
                ('total_terms', models.IntegerField(default=0)),
                ('total_mappings', models.IntegerField(default=0)),
                ('is_built', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('version', models.CharField(default='1.0', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'facet_indexes',
            },
        ),
        migrations.CreateModel(
            name='IndexingLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('operation_type', models.CharField(max_length=50)),
                ('index_type', models.CharField(max_length=50)),
                ('documents_processed', models.IntegerField(default=0)),
                ('chunks_processed', models.IntegerField(default=0)),
                ('vectors_created', models.IntegerField(default=0)),
                ('processing_time', models.FloatField(default=0.0)),
                ('is_successful', models.BooleanField(default=True)),
                ('error_message', models.TextField(blank=True)),
                ('config_version', models.CharField(max_length=20)),
                ('model_version', models.CharField(blank=True, max_length=20)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'indexing_logs',
            },
        ),
    ]
