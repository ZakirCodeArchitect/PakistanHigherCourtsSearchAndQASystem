# Generated by Django

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('search_indexing', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DocumentChunk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case_id', models.IntegerField()),
                ('document_id', models.IntegerField(blank=True, null=True)),
                ('chunk_id', models.CharField(db_index=True, max_length=64, unique=True)),
                ('chunk_index', models.IntegerField()),
                ('chunk_text', models.TextField()),
                ('start_char', models.IntegerField()),
                ('end_char', models.IntegerField()),
                ('page_number', models.IntegerField(blank=True, null=True)),
                ('chunk_hash', models.CharField(db_index=True, max_length=64)),
                ('token_count', models.IntegerField()),
                ('is_embedded', models.BooleanField(default=False)),
                ('embedding_hash', models.CharField(blank=True, max_length=64)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'document_chunks',
                'unique_together': {('case_id', 'chunk_index')},
            },
        ),
        migrations.CreateModel(
            name='SearchMetadata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case_id', models.IntegerField()),
                ('case_number_normalized', models.CharField(db_index=True, max_length=300)),
                ('case_title_normalized', models.CharField(db_index=True, max_length=800)),
                ('parties_normalized', models.TextField(blank=True)),
                ('court_normalized', models.CharField(db_index=True, max_length=100)),
                ('status_normalized', models.CharField(db_index=True, max_length=50)),
                ('institution_date', models.DateField(blank=True, db_index=True, null=True)),
                ('hearing_date', models.DateField(blank=True, db_index=True, null=True)),
                ('disposal_date', models.DateField(blank=True, db_index=True, null=True)),
                ('content_hash', models.CharField(db_index=True, max_length=64)),
                ('text_hash', models.CharField(db_index=True, max_length=64)),
                ('metadata_hash', models.CharField(db_index=True, max_length=64)),
                ('total_chunks', models.IntegerField(default=0)),
                ('total_terms', models.IntegerField(default=0)),
                ('avg_chunk_length', models.FloatField(default=0.0)),
                ('is_indexed', models.BooleanField(default=False)),
                ('last_indexed', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'search_metadata',
                'unique_together': {('case_id',)},
            },
        ),
        migrations.AddIndex(
            model_name='documentchunk',
            index=models.Index(fields=['chunk_hash'], name='document_chunks_chunk_hash_idx'),
        ),
        migrations.AddIndex(
            model_name='documentchunk',
            index=models.Index(fields=['is_embedded'], name='document_chunks_is_embedded_idx'),
        ),
        migrations.AddIndex(
            model_name='documentchunk',
            index=models.Index(fields=['page_number'], name='document_chunks_page_number_idx'),
        ),
        migrations.AddIndex(
            model_name='indexinglog',
            index=models.Index(fields=['operation_type'], name='indexing_logs_operation_type_idx'),
        ),
        migrations.AddIndex(
            model_name='indexinglog',
            index=models.Index(fields=['index_type'], name='indexing_logs_index_type_idx'),
        ),
        migrations.AddIndex(
            model_name='indexinglog',
            index=models.Index(fields=['is_successful'], name='indexing_logs_is_successful_idx'),
        ),
        migrations.AddIndex(
            model_name='indexinglog',
            index=models.Index(fields=['started_at'], name='indexing_logs_started_at_idx'),
        ),
        migrations.AddIndex(
            model_name='searchmetadata',
            index=models.Index(fields=['case_number_normalized'], name='search_metadata_case_number_normalized_idx'),
        ),
        migrations.AddIndex(
            model_name='searchmetadata',
            index=models.Index(fields=['court_normalized'], name='search_metadata_court_normalized_idx'),
        ),
        migrations.AddIndex(
            model_name='searchmetadata',
            index=models.Index(fields=['status_normalized'], name='search_metadata_status_normalized_idx'),
        ),
        migrations.AddIndex(
            model_name='searchmetadata',
            index=models.Index(fields=['institution_date'], name='search_metadata_institution_date_idx'),
        ),
        migrations.AddIndex(
            model_name='searchmetadata',
            index=models.Index(fields=['disposal_date'], name='search_metadata_disposal_date_idx'),
        ),
        migrations.AddIndex(
            model_name='searchmetadata',
            index=models.Index(fields=['is_indexed'], name='search_metadata_is_indexed_idx'),
        ),
    ]
