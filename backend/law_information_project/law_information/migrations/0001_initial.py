# Generated by Django 5.2.5 on 2025-09-17 11:27

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="LawCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("slug", models.SlugField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "color",
                    models.CharField(
                        default="#007bff", help_text="Hex color code", max_length=7
                    ),
                ),
                (
                    "icon",
                    models.CharField(
                        blank=True, help_text="Icon class name", max_length=50
                    ),
                ),
                ("order", models.PositiveIntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name_plural": "Law Categories",
                "db_table": "law_categories",
                "ordering": ["order", "name"],
            },
        ),
        migrations.CreateModel(
            name="Law",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "slug",
                    models.CharField(
                        help_text="URL-safe identifier (e.g., 'ppc-379-theft')",
                        max_length=200,
                        unique=True,
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Law title (e.g., 'Theft - PPC 379')", max_length=500
                    ),
                ),
                (
                    "sections",
                    models.JSONField(
                        default=list,
                        help_text="Array of legal sections (e.g., ['PPC 379'])",
                    ),
                ),
                (
                    "punishment_summary",
                    models.TextField(help_text="Summary of punishment for the offense"),
                ),
                (
                    "jurisdiction",
                    models.CharField(
                        help_text="Jurisdiction/body (e.g., 'Magistrate/Sessions Court')",
                        max_length=300,
                    ),
                ),
                (
                    "rights_summary",
                    models.TextField(
                        help_text="Rights of complainant/accused (newline-separated bullets)"
                    ),
                ),
                (
                    "what_to_do",
                    models.TextField(
                        help_text="Checklist/steps for what to do (newline-separated)"
                    ),
                ),
                (
                    "tags",
                    models.JSONField(
                        default=list,
                        help_text="Searchable tags (e.g., ['theft', 'property', 'criminal'])",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether this law entry is active"
                    ),
                ),
                (
                    "is_featured",
                    models.BooleanField(
                        default=False, help_text="Whether to show in featured laws"
                    ),
                ),
            ],
            options={
                "db_table": "laws",
                "ordering": ["title"],
                "indexes": [
                    models.Index(fields=["slug"], name="laws_slug_5613d8_idx"),
                    models.Index(fields=["is_active"], name="laws_is_acti_2c3b39_idx"),
                    models.Index(
                        fields=["is_featured"], name="laws_is_feat_55f215_idx"
                    ),
                    models.Index(fields=["updated_at"], name="laws_updated_3ffe8d_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="LawSearchLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("query", models.CharField(max_length=500)),
                ("results_count", models.PositiveIntegerField(default=0)),
                ("user_ip", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                (
                    "search_type",
                    models.CharField(
                        choices=[
                            ("keyword", "Keyword Search"),
                            ("tag", "Tag Search"),
                            ("section", "Section Search"),
                        ],
                        default="keyword",
                        max_length=50,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "clicked_result",
                    models.ForeignKey(
                        blank=True,
                        help_text="Which result was clicked (if any)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="law_information.law",
                    ),
                ),
            ],
            options={
                "db_table": "law_search_logs",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(fields=["query"], name="law_search__query_fa1f30_idx"),
                    models.Index(
                        fields=["created_at"], name="law_search__created_a4b306_idx"
                    ),
                    models.Index(
                        fields=["search_type"], name="law_search__search__5e82db_idx"
                    ),
                ],
            },
        ),
    ]
